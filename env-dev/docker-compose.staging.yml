version: '3.1'
services:
  enetspace-client:
    build:
      context: ../supspace-client
      dockerfile: Dockerfile.client.prod
    container_name: enetspace-client
    restart: unless-stopped
    image: enetspace-client
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_SOCKET: http://localhost:8091
      NEXT_PUBLIC_API: http://localhost:8091/api/v1
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - enetspace-network
    stdin_open: true
    tty: true
    depends_on:
      - enetspace-api

  nginx:
    build:
      context: ../supspace-client
      dockerfile: Dockerfile.nginx.prod
    container_name: nginx
    ports:
      - 81:80
    networks:
      - enetspace-network
    depends_on:
      - enetspace-client

  enetspace-api:
    build:
      context: ../supspace-api
      dockerfile: Dockerfile.api.prod
    container_name: enetspace-api
    restart: unless-stopped
    image: enetspace-api
    ports:
      - '8091:8080'
    volumes:
      # - .:/app
      - /app/node_modules
    environment:
      MONGODB_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/
      MONGODB_DB_NAME: enetspace-api-staging
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE: ${JWT_EXPIRE}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      NODE_ENV: staging
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      CLIENT_URL: http://localhost:81
      API_URL: http://localhost:8091/api/v1
      STAGING_URL: http://localhost:81
    networks:
      - enetspace-network
    depends_on:
      - mongodb

  mongodb:
    container_name: mongo_enetspace
    image: mongo:4.4.17-focal
    restart: always
    ports:
      - '27018:27017'
    volumes:
      - db_staging:/data/db

    networks:
      - enetspace-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: enetspace1
      MONGO_URI: mongodb://mongo:enetspace1@localhost:27017/
    # profiles: ["app","dev"]
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
  mongo-express:
    image: mongo-express:0.54.0
    container_name: mongo-express_enetspace
    restart: always
    ports:
      - 8081:8081
    networks:
      - enetspace-network
    environment:
      # ME_CONFIG_BASICAUTH_USERNAME: "mongo"
      # ME_CONFIG_BASICAUTH_PASSWORD: "enetspace1"
      ME_CONFIG_SITE_BASEURL: '/mongodb/'
      ME_CONFIG_MONGODB_URL: 'mongodb://mongo:enetspace1@mongo:27017/'
      # ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      # - ME_CONFIG_MONGODB_ADMINUSERNAME=mongo
      # - ME_CONFIG_MONGODB_ADMINPASSWORD=enetspace1
      ME_CONFIG_MONGODB_SERVER: 'mongodb'
      ME_CONFIG_MONGODB_ADMINUSERNAME: 'mongo'
      ME_CONFIG_MONGODB_ADMINPASSWORD: 'enetspace1'
    depends_on:
      - mongodb
    # profiles: ["app","dev"]
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
networks:
  enetspace-network:
    driver: bridge

volumes:
  db_staging:
